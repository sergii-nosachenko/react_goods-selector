{"version":3,"sources":["goods.js","App.tsx","index.tsx"],"names":["App","state","selectedGoods","clear","setState","select","good","prevState","remove","newSelectedGoods","removeIndex","indexOf","splice","action","isActive","getTitle","length","plural","separatedGoods","slice","join","this","className","type","classNames","onClick","path","mdiCloseCircleMultiple","title","size","color","goodsFromServer","map","includes","Good__remove","Good__select","mdiCloseCircle","mdiPlusCircle","Component","ReactDOM","render","document","getElementById"],"mappings":"iPAAe,G,MAAA,CACb,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,OCGWA,EAAb,4MACEC,MAAQ,CACNC,cAAe,CAAC,QAFpB,EAKEC,MAAQ,WACN,EAAKC,SAAS,CACZF,cAAe,MAPrB,EAWEG,OAAS,SAACC,GACR,EAAKF,UAAS,SAACG,GAAD,MAAgB,CAC5BL,cAAc,GAAD,mBACRK,EAAUL,eADF,CAEXI,SAfR,EAoBEE,OAAS,SAACF,GACR,EAAKF,UAAS,SAACG,GACb,IAAME,EAAgB,YAAOF,EAAUL,eACjCQ,EAAcD,EAAiBE,QAAQL,GAM7C,OAJqB,IAAjBI,GACFD,EAAiBG,OAAOF,EAAa,GAGhC,CACLR,cAAeO,OA9BvB,EAmCEI,OAAS,SAACP,EAAcQ,GAAf,OACPA,EACI,EAAKN,OAAOF,GACZ,EAAKD,OAAOC,IAtCpB,EAyCES,SAAW,SAACb,GACV,IAAKA,EAAcc,OACjB,MAAO,oBAGT,IAAMC,EAAkC,IAAzBf,EAAcc,OACzB,KACA,MACEE,EAA0C,IAAzBhB,EAAcc,OACjCd,EAAc,GADK,UAEhBA,EAAciB,MAAM,GAAI,GAAGC,KAAK,MAFhB,gBAE6BlB,EAAciB,OAAO,GAAG,IAE5E,MAAM,GAAN,OAAUD,EAAV,YAA4BD,EAA5B,cArDJ,4CAwDE,WAAU,IAAD,OACCf,EAAkBmB,KAAKpB,MAAvBC,cAER,OACE,uBAAMoB,UAAU,UAAhB,UACE,wBAAQA,UAAU,uCAAlB,SACE,sBAAKA,UAAU,2CAAf,UACE,oBAAIA,UAAU,aAAd,SACGD,KAAKN,SAASb,KAEjB,yBACEqB,KAAK,SACLD,UACEE,IACE,aACA,SACA,WACA,CACE,aAActB,EAAcc,SAIlCS,QAASJ,KAAKlB,MAZhB,UAcE,cAAC,IAAD,CACEuB,KAAMC,IACNC,MAAM,QACNC,KAAM,EACNC,MAAM,UAER,sBAAMR,UAAU,iBAAhB,2BAON,yBACEA,UAAU,0CADZ,SAOE,oBAAIA,UAAU,kCAAd,SACGS,EAAgBC,KAAI,SAAC1B,GACpB,IAAMQ,EAAWZ,EAAc+B,SAAS3B,GAExC,OACE,qBAEEgB,UACEE,IACE,aACA,OACA,CACE,eAAgBV,IAPxB,UAYE,wBACES,KAAK,SACLD,UACEE,IACE,SACA,MACA,WACA,aACA,WACA,CACEU,cAAepB,EACfqB,aAAcrB,IAIpBW,QAAS,kBAAM,EAAKZ,OAAOP,EAAMQ,IAfnC,SAiBE,cAAC,IAAD,CACEY,KAAMZ,EAAWsB,IAAiBC,IAClCT,MAAOd,EAAW,SAAW,SAC7Be,KAAM,EACNC,MAAOhB,EAAW,MAAQ,YAI9B,sBAAMQ,UAAU,iBAAhB,SACGhB,MArCEA,iBA1GvB,GAAyBgC,aCVzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.4aadbd96.chunk.js","sourcesContent":["export default [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n","import { Component, ReactNode } from 'react';\nimport classNames from 'classnames';\nimport { mdiCloseCircle, mdiPlusCircle, mdiCloseCircleMultiple } from '@mdi/js';\nimport Icon from '@mdi/react';\n\nimport 'bulma';\n\nimport goodsFromServer from './goods';\n\ntype State = {\n  selectedGoods: string[],\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    selectedGoods: ['Jam'],\n  };\n\n  clear = () => {\n    this.setState({\n      selectedGoods: [],\n    });\n  };\n\n  select = (good: string) => {\n    this.setState((prevState) => ({\n      selectedGoods: [\n        ...prevState.selectedGoods,\n        good,\n      ],\n    }));\n  };\n\n  remove = (good: string) => {\n    this.setState((prevState) => {\n      const newSelectedGoods = [...prevState.selectedGoods];\n      const removeIndex = newSelectedGoods.indexOf(good);\n\n      if (removeIndex !== -1) {\n        newSelectedGoods.splice(removeIndex, 1);\n      }\n\n      return {\n        selectedGoods: newSelectedGoods,\n      };\n    });\n  };\n\n  action = (good: string, isActive: boolean) => (\n    isActive\n      ? this.remove(good)\n      : this.select(good)\n  );\n\n  getTitle = (selectedGoods: string[]): ReactNode => {\n    if (!selectedGoods.length) {\n      return 'No goods selected';\n    }\n\n    const plural = selectedGoods.length === 1\n      ? 'is'\n      : 'are';\n    const separatedGoods = selectedGoods.length === 1\n      ? selectedGoods[0]\n      : `${selectedGoods.slice(0, -1).join(', ')} and ${selectedGoods.slice(-1)[0]}`;\n\n    return `${separatedGoods} ${plural} selected`;\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <main className=\"App p-2\">\n        <header className=\"App__header columns is-centered pt-5\">\n          <div className=\"column is-half content has-text-centered\">\n            <h1 className=\"App__title\">\n              {this.getTitle(selectedGoods)}\n            </h1>\n            <button\n              type=\"button\"\n              className={\n                classNames(\n                  'App__clear',\n                  'button',\n                  'is-black',\n                  {\n                    'is-hidden': !selectedGoods.length,\n                  },\n                )\n              }\n              onClick={this.clear}\n            >\n              <Icon\n                path={mdiCloseCircleMultiple}\n                title=\"Clear\"\n                size={1}\n                color=\"white\"\n              />\n              <span className=\"ml-2 is-size-6\">\n                Clear\n              </span>\n            </button>\n          </div>\n        </header>\n\n        <section\n          className=\"\n            App__list-wrapper\n            columns\n            is-centered\n          \"\n        >\n          <ul className=\"App__list column level is-3 box\">\n            {goodsFromServer.map((good: string) => {\n              const isActive = selectedGoods.includes(good);\n\n              return (\n                <li\n                  key={good}\n                  className={\n                    classNames(\n                      'level-left',\n                      'Good',\n                      {\n                        'Good--active': isActive,\n                      },\n                    )\n                  }\n                >\n                  <button\n                    type=\"button\"\n                    className={\n                      classNames(\n                        'button',\n                        'p-1',\n                        'is-small',\n                        'is-rounded',\n                        'is-ghost',\n                        {\n                          Good__remove: !isActive,\n                          Good__select: isActive,\n                        },\n                      )\n                    }\n                    onClick={() => this.action(good, isActive)}\n                  >\n                    <Icon\n                      path={isActive ? mdiCloseCircle : mdiPlusCircle}\n                      title={isActive ? 'Remove' : 'Select'}\n                      size={1}\n                      color={isActive ? 'red' : 'green'}\n                    />\n                  </button>\n\n                  <span className=\"ml-2 is-size-4\">\n                    {good}\n                  </span>\n                </li>\n              );\n            })}\n          </ul>\n        </section>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}